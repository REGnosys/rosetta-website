{{- if .Values.ingress.enabled -}}
{{- $fullName := include "rosetta-website-nginx.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{- $releaseName := .Release.Name -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "rosetta-website-nginx.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.ingress.tls }}
  tls:
    {{- range $i, $hostOverride := (.Values.global.hostnameOverride) }}
    {{- range $j, $tls := ($.Values.ingress.tls) }}
    - hosts:
        {{- range $tls.hosts }}
        - {{ $hostOverride }}
        {{- end }}
      secretName: {{ $releaseName }}-{{ $tls.secretName }}-{{ $i }}
    {{- end }}
    {{- end }}
  {{- end }}
  rules:
    {{- range $i, $hostOverride := (.Values.global.hostnameOverride) }}
    {{- range $j, $host := ($.Values.ingress.hosts) }}
    - host: {{ $hostOverride }}
      http:
        paths:
          {{- range $host.paths }}
          - path: {{ .path }}
            backend:
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
          {{- end }}
    {{- end }}
    {{- end }}
  {{- end }}
