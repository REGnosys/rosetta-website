kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ include "rosetta-website-nginx.fullname" . }}
  labels:
  {{- include "rosetta-website-nginx.labels" . | nindent 4 }}
data:
  nginx-gzip.conf: |-
    gzip on;
    gzip_proxied any; 
    gzip_types text/plain text/xml text/css application/x-javascript;
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";

  nginx-proxy.conf: |-

    # Cache for static files
    proxy_cache_path /tmp/nginx-cache levels=1:2 keys_zone=staticcache:8m max_size=1000m inactive=60m use_temp_path=off;
    # keyzone size 8MB, cache size 1000MB, inactive delete 60min
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_valid 200 302 60m; # cache successful responses for 60 minutes
    proxy_cache_valid 404 1m; # expire 404 responses 1 minute

    server {
      
      location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://{{ .Release.Name }}-{{ .Values.global.node.name }}:{{ .Values.global.node.port }};
      }

      # Only cache static files; don't cache the dynamic API response!
      location ~* ^.+\.(jpg|jpeg|gif|png|ico|svg|css|bmp|js|html|htm)$ {
          proxy_cache staticcache; # Use "staticcache" we defined above
          proxy_cache_bypass $http_cache_control; # Support client "Cache-Control: no-cache" directive
          add_header X-Proxy-Cache $upstream_cache_status; # Hit or Miss

          # Nginx cache to ignore Node.js default "Cache-Control: public, max-age=0"
          # and don't pass it on to clients
          proxy_ignore_headers Cache-Control;
          proxy_hide_header Cache-Control;
          expires 60m; # "Cache-Control: max-age=3600" tells client to cache for 60 minutes

          proxy_pass http://{{ .Release.Name }}-{{ .Values.global.node.name }}:{{ .Values.global.node.port }};
       }
    }